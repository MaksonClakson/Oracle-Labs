CREATE TABLE students_log
(
    log_pk NUMBER(10) GENERATED BY DEFAULT AS IDENTITY,
    operation VARCHAR2(6) NOT NULL,
    operation_time DATE NOT NULL,
    id NUMBER(10) NOT NULL,
    name VARCHAR2(50) NOT NULL,
    group_id VARCHAR2(50) NOT NULL
);

CREATE OR REPLACE TRIGGER logging_students
AFTER INSERT OR UPDATE OR DELETE ON students
FOR EACH ROW
DECLARE
   operation VARCHAR2(10);
   old_id NUMBER(10);
BEGIN
   IF INSERTING THEN
      operation := 'INSERT';
   ELSIF UPDATING THEN
      operation := 'UPDATE';
   ELSE
      operation := 'DELETE';
   END IF;
   
   IF INSERTING THEN
      INSERT INTO students_log (operation, operation_time, id, name, group_id)
      VALUES (operation, CURRENT_TIMESTAMP, :NEW.id, :NEW.name, :NEW.group_id);
   ELSE
      INSERT INTO students_log (operation, operation_time, id, name, group_id)
      VALUES (operation, CURRENT_TIMESTAMP, :OLD.id, :OLD.name, :OLD.group_id);
   END IF;
END;
/

CREATE OR REPLACE PROCEDURE restore_students(p_time IN TIMESTAMP)
IS
BEGIN
   FOR log_row IN (SELECT * FROM students_log WHERE operation_time > p_time ORDER BY operation_time ASC)
   LOOP
      IF log_row.operation = 'INSERT' THEN
         DELETE FROM students WHERE id = log_row.id;
      ELSIF log_row.operation = 'UPDATE' THEN
         UPDATE students SET name = log_row.name, group_id = log_row.group_id WHERE id = log_row.id;
      ELSE
         INSERT INTO students (id, name, group_id) VALUES (log_row.id, log_row.name, log_row.group_id);
      END IF;
   END LOOP;
   DELETE FROM students_log WHERE operation_time > p_time;
END;
/

-- Test Functionality
BEGIN
    INSERT INTO students (name, group_id) VALUES ('Vasya', 1);
    INSERT INTO students (name, group_id) VALUES ('Petya', 2);
    INSERT INTO students (name, group_id) VALUES ('Tanya', 3);
    INSERT INTO students (name, group_id) VALUES ('Sasha', 2);
    INSERT INTO students (name, group_id) VALUES ('John', 1);
    INSERT INTO students (name, group_id) VALUES ('Selivan', 1);
    -- DBMS_SESSION.SLEEP(2);
END;
/

EXECUTE restore_students(TO_TIMESTAMP('16.03.23 20:22:34.778226000', 'dd.mm.yy hh24:mi:ss.ff'));
